name: "Resource"
version: 0.0.0
description: A template for representing resources like launch files, urdf files, meshes, etc.
license: "MIT"
ai_directive: |
  This is a ROS 2 resource package template. When generating code for this template:
  
  HIGH PRIORITY REQUIREMENTS:
  - Focus on creating resource files (URDF, meshes, launch files, configuration files)
  - Ensure all file paths and references are correctly structured
  - Include proper ROS 2 package structure for resource packages
  - Add appropriate dependencies for the included resources
  - Follow ROS 2 naming conventions for all generated files
  - Include comprehensive documentation for the resource package
  - Use python package best practices for any scripts included in the package
  - Do not include test cases, unless specifically prompted by the user
  
  RESOURCE-SPECIFIC GUIDELINES:
  - URDF files should be well-formed XML with proper joint and link definitions
  - Launch files should use modern ROS 2 launch API (not legacy launch)
  - Mesh files should be properly referenced in URDF with correct relative paths
  - Include parameter files for configurable resource parameters
  - Add proper error handling for resource loading failures
  - If you need to generate more than just simple geometry, create OpenSCAD files for complex meshes. 
  - OpenSCAD files will be post processed to stl files, so reference the stl files in the URDF or Xacro.


  ```
  package_name/
  ├── package.xml
  ├── setup.py
  ├── setup.cfg
  ├── resource/package_name
  ├── README.md
  ├── LICENSE
  ├── CONTRIBUTING.md
  ├── Agents.md
  ├── .gitignore
  ├── launch/
  │   └── node.launch.py  # One launch file for each top level URDF or Xacro File
  └── urdf/
      ├── robot.urdf  # Main URDF file
      ├── robot.xacro # Optional Xacro file if needed
      ├── meshes/     # Directory for mesh files (STL, DAE, OpenSCAD)
      │   ├── part1.stl
      │   └── part2.dae
          └── complex_part.scad
  ├── worlds/
  │   ├── simulation.world          # Main Gazebo world file
  │   └── objects/                  # Directory for custom world objects
  │       └── custom_object.sdf     # Custom object definitions
  ├── models/                       # Gazebo models directory
  │   ├── robot_model/             # Directory for robot model
  │   │   ├── model.sdf            # SDF model definition
  │   │   ├── model.config         # Model configuration
  │   │   └── meshes/              # Model-specific meshes
  │   └── environment_models/      # Environment models
  │       └── terrain/             # Example terrain model
  │           ├── model.sdf
  │           └── model.config
  ├── config/
  │   ├── gazebo_params.yaml       # Gazebo-specific parameters
  │   └── controllers.yaml         # Controller configurations for simulation
  └── rviz/
    └── gazebo_simulation.rviz   # RViz configuration for visualizing simulation
  ```

  Setup.cfg must include:
  ```ini
    [develop]
    script_dir=$base/lib/package_name
    [install]
    install_scripts=$base/lib/package_name
  ```